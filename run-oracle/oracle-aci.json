{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.14.85.62628",
      "templateHash": "14655228307632175241"
    }
  },
  "parameters": {
    "serverName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Server Name. (will be used as the DNS Label)"
      }
    },
    "numberCpuCores": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "CPUs for the server"
      }
    },
    "memory": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "Memory available to the server."
      }
    },
    "passwd": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "SYS Password"
      }
    },
    "rows": {
      "type": "int",
      "defaultValue": 1000,
      "metadata": {
        "description": "Sample rows to insert into sales"
      }
    }
  },
  "variables": {
    "$fxv#0": "ALTER SESSION set container = XEPDB1;\r\n\r\nCREATE USER sales IDENTIFIED BY salessample;\r\n\r\nALTER USER sales quota unlimited on users;\r\n\r\nGRANT CREATE SESSION, CREATE TABLE, CREATE PROCEDURE TO sales;\r\n\r\n\r\n-- Create tables\r\nCREATE TABLE sales.Product (\r\n    product_id NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY,\r\n    name VARCHAR2(100) NOT NULL,\r\n    price NUMBER(10,2) NOT NULL,\r\n    PRIMARY KEY (product_id)\r\n);\r\n\r\n\r\nCREATE TABLE sales.Customer (\r\n    customer_id NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY,\r\n    name VARCHAR2(100) NOT NULL,\r\n    email VARCHAR2(100) NOT NULL,\r\n    PRIMARY KEY (customer_id)\r\n);\r\n\r\nCREATE TABLE sales.Sales (\r\n    sales_id NUMBER(10) GENERATED BY DEFAULT ON NULL AS IDENTITY,\r\n    customer_id NUMBER(10) NOT NULL,\r\n    sales_date DATE NOT NULL,\r\n    PRIMARY KEY (sales_id),\r\n    CONSTRAINT fk_sales_customer FOREIGN KEY (customer_id) REFERENCES sales.Customer(customer_id)\r\n);\r\n\r\nCREATE TABLE sales.SalesItems (\r\n    sales_id NUMBER(10) NOT NULL,\r\n    product_id NUMBER(10) NOT NULL,\r\n    quantity NUMBER(10) NOT NULL,\r\n    price NUMBER(10,2) NOT NULL,\r\n    CONSTRAINT pk_sales_items PRIMARY KEY (sales_id, product_id),\r\n    CONSTRAINT fk_sales_items_sales FOREIGN KEY (sales_id) REFERENCES sales.Sales(sales_id),\r\n    CONSTRAINT fk_sales_items_product FOREIGN KEY (product_id) REFERENCES sales.Product(product_id)\r\n);\r\n\r\n\r\n\r\n\r\n\r\nINSERT INTO sales.Product (name, price) VALUES ('Apple', 0.50);\r\nINSERT INTO sales.Product (name, price) VALUES ('Banana', 0.25);\r\nINSERT INTO sales.Product (name, price) VALUES ('Orange', 0.75);\r\nINSERT INTO sales.Product (name, price) VALUES ('Pear', 0.80);\r\nINSERT INTO sales.Product (name, price) VALUES ('Grapes', 1.50);\r\nINSERT INTO sales.Product (name, price) VALUES ('Mango', 1.00);\r\nINSERT INTO sales.Product (name, price) VALUES ('Pineapple', 2.00);\r\nINSERT INTO sales.Product (name, price) VALUES ('Watermelon', 3.00);\r\nINSERT INTO sales.Product (name, price) VALUES ('Kiwi', 0.75);\r\nINSERT INTO sales.Product (name, price) VALUES ('Peach', 1.20);\r\n\r\n\r\n\r\nINSERT INTO sales.Customer (name, email) VALUES ('John Smith', 'john.smith@example.com');\r\nINSERT INTO sales.Customer (name, email) VALUES ('Jane Doe', 'jane.doe@example.com');\r\nINSERT INTO sales.Customer (name, email) VALUES ('Bob Johnson', 'bob.johnson@example.com');\r\nINSERT INTO sales.Customer (name, email) VALUES ('Mary Williams', 'mary.williams@example.com');\r\nINSERT INTO sales.Customer (name, email) VALUES ('David Lee', 'david.lee@example.com');\r\n\r\n\r\n\r\nCREATE OR REPLACE PROCEDURE sales.random_sales(p_count IN NUMBER) IS\r\n  v_customer_id NUMBER(10);\r\n  v_product_id NUMBER(10);\r\n  v_sales_id NUMBER(10);\r\n  v_price NUMBER(10,2);\r\nBEGIN\r\n  FOR i IN 1..p_count LOOP\r\n    -- Insert random customer\r\n    SELECT customer_id INTO v_customer_id FROM (\r\n      SELECT customer_id FROM Customer ORDER BY DBMS_RANDOM.RANDOM() \r\n    ) WHERE ROWNUM = 1;\r\n    INSERT INTO Sales (sales_date, customer_id) VALUES (SYSDATE, v_customer_id) returning sales_id INTO v_sales_id;\r\n    \r\n    -- Insert random sales items\r\n    SELECT product_id, price INTO v_product_id, v_price FROM (\r\n    SELECT product_id, price FROM Product ORDER BY DBMS_RANDOM.RANDOM() \r\n    ) WHERE ROWNUM = 1;\r\n    INSERT INTO SalesItems (sales_id, product_id, quantity, price)\r\n        VALUES (v_sales_id,  v_product_id, DBMS_RANDOM.VALUE(1, 10), v_price);\r\n  END LOOP;\r\nEND random_sales;\r\n/\r\n\r\n\r\n",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('serverName')]",
      "location": "[variables('location')]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('serverName')]",
            "properties": {
              "image": "container-registry.oracle.com/database/express:21.3.0-xe",
              "environmentVariables": [
                {
                  "name": "ORACLE_PWD",
                  "secureValue": "[parameters('passwd')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "[parameters('numberCpuCores')]",
                  "memoryInGB": "[parameters('memory')]"
                }
              },
              "ports": [
                {
                  "port": 1521,
                  "protocol": "TCP"
                }
              ],
              "volumeMounts": [
                {
                  "name": "scriptsshare",
                  "mountPath": "/opt/oracle/scripts/startup",
                  "readOnly": false
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "TCP",
              "port": 1521
            }
          ],
          "dnsNameLabel": "[parameters('serverName')]"
        },
        "restartPolicy": "Never",
        "volumes": [
          {
            "name": "scriptsshare",
            "secret": {
              "0_database.sql": "[base64(variables('$fxv#0'))]",
              "1_data.sql": "[base64(format('ALTER SESSION set container = XEPDB1;\nexec sales.random_sales({0});', parameters('rows')))]"
            }
          }
        ]
      }
    }
  ]
}